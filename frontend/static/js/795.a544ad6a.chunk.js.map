{"version":3,"file":"static/js/795.a544ad6a.chunk.js","mappings":"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","sources":["components/Menu.jsx","components/AppBar.jsx","components/Drawer.jsx","components/Backdrop.jsx","components/SignalTrigger.jsx","layouts/MainLayout.jsx","services/api.js","services/idb.js","utils/calulator.js"],"sourcesContent":["import React, {memo} from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport Grow from '@mui/material/Grow';\r\nimport Popper from '@mui/material/Popper';\r\nimport {grey} from '@mui/material/colors';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Paper from '@mui/material/Paper';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport ChatOutlinedIcon from '@mui/icons-material/ChatOutlined';\r\nimport ReadMoreOutlinedIcon from '@mui/icons-material/ReadMoreOutlined';\r\nconst MyIcon = memo(({name}) => {\r\n    if(name === 'Logout') return <LogoutIcon sx={{fontSize: 22, mr: 1}} />;\r\n    else if(name === 'Setting') return <SettingsOutlinedIcon sx={{fontSize: 22, mr: 1}} />;\r\n    else if(name === 'Chat With Driver') return <ChatOutlinedIcon sx={{fontSize: 22, mr: 1}} />;\r\n    else if(name === 'Order Details') return <ReadMoreOutlinedIcon sx={{fontSize: 22, mr: 1}} />;\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n})\r\nconst MyMenu = ({ open, anchorEl, options, onClick, onClose }) => {\r\n    return (\r\n        <>\r\n            <Popper \r\n                open={open} \r\n                anchorEl={ anchorEl.current} \r\n                role={undefined} \r\n                transition \r\n                disablePortal\r\n                placement=\"bottom-end\"\r\n                style={{zIndex: 1300}}\r\n            >\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow {...TransitionProps} style={{ transformOrigin: 'center top' }} >\r\n                        <Paper elevation={4}>\r\n                            <ClickAwayListener onClickAway={onClose}>\r\n                                <MenuList \r\n                                    autoFocusItem={Boolean(anchorEl)} \r\n                                    sx={{ maxHeight: 400, }}\r\n                                >\r\n                                    { options.map((option, index) => (\r\n                                        <MenuItem \r\n                                            key={`option_${index}`} \r\n                                            onClick={()=>onClick(option)}\r\n                                            sx={{ \r\n                                                paddingLeft: theme=>theme.spacing(3), \r\n                                                paddingRight: theme=>theme.spacing(3) \r\n                                            }}\r\n                                        >  \r\n                                            <MyIcon name={option} />\r\n                                            <Typography\r\n                                                sx={{\r\n                                                    paddingTop: theme=>theme.spacing(0.2),\r\n                                                    paddingBottom: theme=>theme.spacing(0.2),\r\n                                                }}\r\n                                            >\r\n                                                {option} \r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    )\r\n}\r\nMyMenu.defaultProps = {\r\n    open: false,\r\n    anchorEl: null,\r\n    options: [],\r\n    onClick: () => {},\r\n    onClose: () => {}\r\n}\r\nexport default memo(MyMenu);","import React, { memo, useRef, useCallback, useState, useMemo } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { styled } from '@mui/material/styles';\r\nimport { grey } from '@mui/material/colors';\r\nimport MUIAppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport MuiToolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport TransgenderIcon from '@mui/icons-material/Transgender';\r\nimport Menu from \"./Menu\";\r\n\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n      right: -3,\r\n      top: 13,\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n    },\r\n}));\r\n\r\nconst Toolbar = styled(MuiToolbar)(\r\n    ({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    }),\r\n);\r\nconst Image = styled('img') (\r\n    ({theme}) => ({\r\n        width: 35,\r\n        height: 35,\r\n        objectFit: 'contain',\r\n        marginRight: theme.spacing(4)\r\n    })\r\n)\r\nconst AppBar = () => {\r\n    \r\n    const [value, setValue] = useState({\r\n        menu: false,\r\n    });\r\n    const navigate = useNavigate();\r\n    const profileRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const onClickMenu = useCallback((prop) => {\r\n        if(prop === 'Logout') {\r\n           \r\n        }\r\n        setValue(value => ({ ...value, menu: false}))\r\n    }, []);\r\n    const onOpenMenu = useCallback(() => {\r\n        setValue(value => ({ ...value, menu: true}))\r\n    }, [])\r\n    const onCloseMenu = useCallback(() => {\r\n        setValue(value => ({ ...value, menu: false}))\r\n    }, []);\r\n    const onHome = useCallback(() => {\r\n        navigate('/')\r\n    }, [])\r\n    return (\r\n        <>\r\n            <MUIAppBar position=\"fixed\" sx={{bgcolor: grey[100], zIndex: theme => theme.zIndex.drawer + 1}} >\r\n                <Toolbar spacing={2}>\r\n                    <Box className={clsx('flex-grow')}>\r\n                        <Typography variant=\"h6\" sx={{color: grey[700]}}>\r\n                            My Statistics Viewer\r\n                        </Typography>\r\n                    </Box>\r\n                    <IconButton >\r\n                        <TransgenderIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </MUIAppBar>\r\n            <Menu \r\n                options={[\r\n                    \"Logout\", \"Setting\"\r\n                ]}\r\n                open={value['menu']}\r\n                anchorEl={profileRef}\r\n                onClose={onCloseMenu}\r\n                onClick={onClickMenu}\r\n            />\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default memo(AppBar)","import React, {memo, useCallback, useMemo} from 'react';\r\nimport clsx from 'clsx';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport {grey} from '@mui/material/colors';\r\n\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport StorageOutlinedIcon from '@mui/icons-material/StorageOutlined';\r\nimport AnalyticsOutlinedIcon from '@mui/icons-material/AnalyticsOutlined';\r\nimport StackedBarChartIcon from '@mui/icons-material/StackedBarChart';\r\nconst Drawer = styled(MuiDrawer)(\r\n    ({ theme }) => ({\r\n      width: `calc(${theme.spacing(30)} + 1px)`,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n      boxSizing: 'border-box',\r\n      '& .MuiDrawer-paper': {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: `calc(${theme.spacing(30)} + 1px)`,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        height: '100vh'\r\n      }\r\n    }),\r\n  );\r\nconst MyDrawer = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const onClick = useCallback((path) => () => {\r\n        navigate(path)\r\n    }, []);\r\n    const activeTab = useMemo(() => {\r\n        if(location.pathname === '/') return 'Statistics';\r\n        else if(location.pathname === '/charts') return 'Charts';\r\n        else if(location.pathname === '/update') return 'Update DB'\r\n        return ''\r\n    }, [location])\r\n    return (\r\n        <>\r\n            <Drawer variant=\"permanent\">\r\n              <Box \r\n                className={clsx('full-width', 'text-center', 'cursor-pointer')} \r\n                sx={{ pt: 11 }} \r\n              >\r\n                <List >\r\n                    <ListItem disablePadding >\r\n                        <ListItemButton onClick={onClick('/')} selected={activeTab === 'Statistics'}>\r\n                            <ListItemIcon>\r\n                                <AnalyticsOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Statistics\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                    <ListItem disablePadding selected={activeTab === 'Update DB'}>\r\n                        <ListItemButton onClick={onClick('/update')}>\r\n                            <ListItemIcon>\r\n                                <StorageOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Update DB\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                    <ListItem disablePadding selected={activeTab === 'Charts'} >\r\n                        <ListItemButton onClick={onClick('/charts')}>\r\n                            <ListItemIcon>\r\n                                <StackedBarChartIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Charts\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </List>\r\n              </Box>\r\n            \r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\nexport default memo(MyDrawer);","import React, {memo} from 'react';\r\nimport { useSelector, shallowEqual } from \"react-redux\";\r\nimport clsx from 'clsx';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst MyBackdrop = () => {\r\n    const {uploading} = useSelector(state => ({\r\n        uploading: state.Help.uploading\r\n    }), shallowEqual)\r\n    return (\r\n        <>\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 2 }}\r\n                open={uploading}\r\n            >\r\n                <Box className={clsx('flex-column', 'align-center')} >\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Typography sx={{mt: 2}}>Uploading...</Typography>\r\n                </Box>\r\n            </Backdrop>\r\n        </>\r\n    )\r\n}\r\nexport default memo(MyBackdrop)","import React, { memo, useEffect, useMemo, forwardRef, useCallback } from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport Button from '@mui/material/Button';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { setGlobalMessage, clearHelp } from \"../modules/help\";\r\n\r\nconst Alert = forwardRef((props, ref) =>{\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  })\r\nconst MySnackBar = memo(({message, status,  onClose}) => {\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ \r\n                    vertical: 'bottom', \r\n                    horizontal: 'center' \r\n                }}\r\n                open={true}\r\n                onClose={onClose}\r\n                autoHideDuration={3000} \r\n            >\r\n                <Alert onClose={onClose} severity={status} >\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n})\r\nconst SignalTrigger = () => {\r\n    const {globalMessage} = useSelector(state => ({\r\n        globalMessage: state.Help.globalMessage,\r\n    }), shallowEqual);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(clearHelp());\r\n    }, []);\r\n    const onCloseSnackBar = useCallback(() => {\r\n        dispatch(setGlobalMessage(null))\r\n    }, []);\r\n    const renderSnackBar = useMemo(() => {\r\n        if(!globalMessage) return <></>\r\n        const {message, status} = globalMessage;\r\n        return (\r\n            <MySnackBar \r\n                message={message} \r\n                status= {status? \"success\": \"error\" } \r\n                onClose = {onCloseSnackBar} \r\n            />\r\n        )\r\n    }, [globalMessage]);\r\n   \r\n    return (\r\n        <>\r\n            {renderSnackBar}\r\n        </>\r\n    )\r\n}\r\nexport default memo(SignalTrigger)","import React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport {styled} from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport {grey} from '@mui/material/colors';\r\nimport AppBar from \"../components/AppBar\";\r\nimport MyDrawer from \"../components/Drawer\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport SignalTrigger from \"../components/SignalTrigger\";\r\nimport * as IdbAPI from \"../services/idb\";\r\nimport * as ServerAPI from \"../services/api\";\r\n\r\nimport { setProducts, setFcs } from '../modules/help';\r\nimport { getProductsAndFcs } from \"../utils/calulator\";\r\nconst StyledContent = styled('main')(\r\n    ({theme}) => ({\r\n        width: '100%',\r\n        backgroundColor: grey[100],\r\n        height: '100vh',\r\n        backgroundColor: grey[100],\r\n        paddingLeft: theme.spacing(34),\r\n        paddingRight: theme.spacing(4),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    })\r\n)\r\nconst StyledToolbar = styled('div')(\r\n    ({theme}) => ({\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      paddingTop: theme.mixins.toolbar.height\r\n    })\r\n)\r\n\r\nconst MainLayout = ({children}) => {\r\n    const [value, setValue] = useState({\r\n        loading: true,\r\n        error: null\r\n    })\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const doAction = async () => {\r\n            try{\r\n                const products = await IdbAPI.getProducts();\r\n                const fcs = await IdbAPI.getFcs();\r\n                if(!!products && !!fcs && !!products.length && !!fcs.length) {\r\n                    dispatch(setProducts(products));\r\n                    dispatch(setFcs(fcs));\r\n                    setValue(value => ({ ...value, loading: false }))\r\n                }else {\r\n                    console.log(3939)\r\n                    await IdbAPI.doClearTransaction('products');\r\n                    await IdbAPI.doClearTransaction('fcs');\r\n                    const {data} = await ServerAPI.getAllInfo();\r\n                    let { status, products, locations, error } = data;\r\n                    if(status) {\r\n                        const info = getProductsAndFcs({products, locations})\r\n                        await IdbAPI.doPutTransaction('products', info['products']);\r\n                        await IdbAPI.doPutTransaction('fcs', info['fcs']);\r\n                        dispatch(setProducts(info['products']));\r\n                        dispatch(setFcs(info['fcs']));\r\n                        setValue(value => ({ ...value, loading: false }))\r\n                    }else {\r\n                        setValue(value => ({ ...value, loading: false, error: error }))\r\n                    }\r\n                }\r\n            }catch(error) {\r\n                setValue(value => ({ ...value, loading: false, error: error.message }))\r\n            }\r\n        }\r\n        doAction();\r\n    }, [])\r\n    const {loading, error} = value;\r\n    return (\r\n        <>\r\n            {loading? (\r\n                <Box className={clsx('full-screen', 'flex', 'justify-center')}>\r\n                    <CircularProgress />\r\n                </Box>\r\n            ): (\r\n                <>\r\n                    {!!error ? (\r\n                        <Box className={clsx('full-screen', 'flex', 'justify-center')}>\r\n                            <Typography variant=\"h6\">\r\n                                {error}\r\n                            </Typography>\r\n                        </Box>\r\n                    ): (\r\n                        <>\r\n                            <CssBaseline />\r\n                            <AppBar />\r\n                            <MyDrawer />\r\n                            <Backdrop />\r\n                            <SignalTrigger />\r\n                            <StyledContent>\r\n                                <StyledToolbar />\r\n                                {children}\r\n                            </StyledContent>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default memo(MainLayout);    ","import axios from 'axios'\r\nlet BACKEND_URL = 'http://159.223.203.170:3001'\r\nexport const uploadDB = async (file) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const result = await axios.post(`${BACKEND_URL}/file/upload`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n    })\r\n    return result;\r\n}\r\nexport const getAllInfo = async () => {\r\n  const result = await axios.post(`${BACKEND_URL}/info/getAllInfo`)\r\n  return result;\r\n}\r\n\r\n","import { openDB, deleteDB } from 'idb';\r\nconst db = openDB('david_statistics', 1, {\r\n    upgrade(db) {\r\n        db.createObjectStore('products', {\r\n            keyPath: 'id',\r\n            autoIncrement: true,\r\n        });\r\n        db.createObjectStore('fcs', {\r\n            keyPath: 'id',\r\n            autoIncrement: true,\r\n        });\r\n    }\r\n})\r\nexport const doPutTransaction = async (storeName, array) => {\r\n    const tx = (await db).transaction(storeName, 'readwrite')\r\n    let _array = array.map((el) => {\r\n      return tx.store.put(el)\r\n    }).concat(tx.done);\r\n    return Promise.all(_array);\r\n}\r\nexport const doClearTransaction = async (storeName) => {\r\n    return (await db).clear(storeName);\r\n}\r\nexport const getProducts = async () => {\r\n    const array = await (await db).getAll('products');\r\n    return array;\r\n}\r\nexport const getFcs = async () => {\r\n    const array = await (await db).getAll('fcs');\r\n    return array;\r\n}","import moment from 'moment';\r\nexport const getProductsAndFcs = ({products, locations}) => {\r\n    try{\r\n        let _products = products.map(el => {\r\n            const found = locations.find(location => location['Asin'] === el['Asin'])\r\n            if(!!found) return { ...el, date: found['Date'], fc: found['Fc'] }\r\n            else return { ...el, date: '', fc: '' }\r\n        });\r\n        let fcs = [...new Set(locations.map(el => el['Fc']))];\r\n        fcs = fcs.map(el => ({ name: el}))\r\n        return { products: _products, fcs }\r\n    }catch(error) {\r\n        return { products: [], fcs: [] }\r\n    }\r\n}\r\nexport const getStatistics = (products, fc, from , to) => {\r\n    let _products = [...products];\r\n    if(fc !== 'All') _products = _products.filter(el => el['fc'] === fc);\r\n    if(!!from) {\r\n        _products = _products.filter(el => !!el['date']).filter(el => {\r\n            return moment(el['date']).isAfter(from) || moment(el['date']).isSame(from) ; \r\n        })\r\n    }\r\n    console.log(to)\r\n    console.log(from)\r\n    console.log(_products)\r\n    if(!!to) {\r\n        _products = _products.filter(el => !!el['date']).filter(el => {\r\n            return moment(el['date']).isBefore(to) || moment(el['date']).isSame(to) ; \r\n        })\r\n    }\r\n    console.log(_products)\r\n    // HP, LP, AP, LSD, SSD, ASD, LMD, SMD, AMD, LLD , SLD, ALD, CATEGORY, SUBCATEGORY, BRAND \r\n    \r\n    let array = [..._products];\r\n    array = array.filter(el => !!el['Price'])\r\n    array.sort((a, b) => a['Price'] < b['Price']? 1: -1);\r\n    let HP = array.filter((el, index) => !!el && index < 5).map(el => el['Price']);\r\n    array = array.reverse();\r\n    let LP = array.filter((el, index) => !!el && index < 5).map(el => el['Price']);\r\n    let AP = array.map(el => el['Price']).reduce((a, b) => a + b, 0) / array.length;\r\n    AP = parseInt(AP * 10000) / 10000;\r\n\r\n    array = [..._products];\r\n    array = array.filter(el => !!el['Shortest'])\r\n    array.sort((a, b) => a['Shortest'] < b['Shortest']? 1: -1);\r\n    let LSD = array.filter((el, index) => !!el && index < 5).map(el => el['Shortest']);\r\n    array = array.reverse();\r\n    let SSD = array.filter((el, index) => !!el && index < 5).map(el => el['Shortest']);\r\n    let ASD = array.map(el => el['Shortest']).reduce((a, b) => a + b, 0) / array.length;\r\n    ASD = parseInt(ASD * 10000) / 10000;\r\n    \r\n    array = [..._products];\r\n    array = array.filter(el => !!el['Median'])\r\n    array.sort((a, b) => a['Median'] < b['Median']? 1: -1);\r\n    let LMD = array.filter((el, index) => !!el && index < 5).map(el => el['Median']);\r\n    array = array.reverse();\r\n    let SMD = array.filter((el, index) => !!el && index < 5).map(el => el['Median']);\r\n    let AMD = array.map(el => el['Median']).reduce((a, b) => a + b, 0) / array.length;\r\n    AMD = parseInt(AMD * 10000) / 10000;\r\n   \r\n    array = [..._products];\r\n    array = array.filter(el => !!el['Longest'])\r\n    array.sort((a, b) => a['Longest'] < b['Longest']? 1: -1);\r\n    let LLD = array.filter((el, index) => !!el && index < 5).map(el => el['Longest']);\r\n    array = array.reverse();\r\n    let SLD = array.filter((el, index) => !!el && index < 5).map(el => el['Longest']);\r\n    let ALD = array.map(el => el['Longest']).reduce((a, b) => a + b, 0) / array.length;\r\n    ALD = parseInt(ALD * 10000) / 10000;\r\n\r\n    array = [..._products];\r\n    array = array.filter(el => !!el['C1'])\r\n    let categorys = [...new Set(array.map(el => el['C1']))]\r\n    let CATEGORY = [];\r\n    categorys.forEach(category => {\r\n        let arr = array.filter(el => el['C1'] === category);\r\n        CATEGORY.push({  label: category, count: arr.length })\r\n    })\r\n    CATEGORY.sort((a, b) => a['count'] < b['count']? 1: -1);\r\n\r\n    array = [..._products];\r\n    array = array.filter(el => !!el['C2'])\r\n    let sub_categorys = [...new Set(array.map(el => el['C2']))]\r\n    let SUBCATEGORY = [];\r\n    sub_categorys.forEach(label => {\r\n        let arr = array.filter(el => el['C2'] === label);\r\n        SUBCATEGORY.push({  label: label, count: arr.length })\r\n    })\r\n    SUBCATEGORY.sort((a, b) => a['count'] < b['count']? 1: -1);\r\n\r\n    array = [..._products];\r\n    array = array.filter(el => !!el['Brand'])\r\n    let brands = [...new Set(array.map(el => el['Brand']))]\r\n    let BRAND = [];\r\n    brands.forEach(brand => {\r\n        let arr = array.filter(el => el['Brand'] === brand);\r\n        BRAND.push({  label: brand, count: arr.length })\r\n    })\r\n    BRAND.sort((a, b) => a['count'] < b['count']? 1: -1);\r\n    return [\r\n        { label: 'Highest Prices', array: HP },\r\n        { label: 'Lowest Prices', array: LP },\r\n        { label: 'Average Prices', array: [AP] },\r\n        { label: 'Largest Shortest Dimensions', array: LSD },\r\n        { label: 'Smallest Shortest Dimensions', array: SSD },\r\n        { label: 'Average Shortest Dimension', array: [ASD] },\r\n        { label: 'Largest Median Dimensions', array: LMD },\r\n        { label: 'Smallest Median Dimensions', array: SMD },\r\n        { label: 'Average Median Dimension', array: [AMD] },\r\n        { label: 'Largest Longest Dimensions', array: LLD },\r\n        { label: 'Smallest Longest Dimensions', array: SLD },\r\n        { label: 'Average Longest Dimension', array: [ALD] },\r\n        { label: 'Category', array: CATEGORY.map(el => el['label']) },\r\n        { label: 'Category Count', array: CATEGORY.map(el => el['count']) },\r\n        { label: 'Subcategory', array: SUBCATEGORY.map(el => el['label']) },\r\n        { label: 'Subcategory Count', array: SUBCATEGORY.map(el => el['count']) },\r\n        { label: 'Brand', array: BRAND.map(el => el['label']) },\r\n        { label: 'Brand Count', array: BRAND.map(el => el['count']) },\r\n    ]\r\n}"],"names":["MyIcon","memo","name","Logout","sx","fontSize","mr","SettingsOutlined","ChatOutlined","ReadMoreOutlined","MyMenu","open","anchorEl","options","onClick","onClose","Popper","current","role","undefined","transition","disablePortal","placement","style","zIndex","TransitionProps","Grow","transformOrigin","Paper","elevation","ClickAwayListener","onClickAway","MenuList","autoFocusItem","Boolean","maxHeight","map","option","index","MenuItem","paddingLeft","theme","spacing","paddingRight","Typography","paddingTop","paddingBottom","defaultProps","Toolbar","styled","Badge","right","top","border","palette","background","paper","padding","MuiToolbar","display","alignItems","justifyContent","mixins","toolbar","AppBar","width","height","objectFit","marginRight","useState","menu","value","setValue","navigate","useNavigate","profileRef","useRef","onClickMenu","useDispatch","useCallback","prop","onCloseMenu","position","bgcolor","grey","drawer","Box","className","clsx","variant","color","IconButton","Transgender","Menu","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","transitions","create","easing","sharp","duration","leavingScreen","overflowX","flexDirection","MyDrawer","location","useLocation","path","activeTab","useMemo","pathname","pt","List","ListItem","disablePadding","ListItemButton","selected","ListItemIcon","AnalyticsOutlined","ListItemText","primary","StorageOutlined","StackedBarChart","MyBackdrop","uploading","useSelector","state","Help","shallowEqual","Backdrop","CircularProgress","mt","Alert","forwardRef","props","ref","MySnackBar","message","status","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","SignalTrigger","globalMessage","dispatch","useEffect","clearHelp","onCloseSnackBar","setGlobalMessage","renderSnackBar","StyledContent","backgroundColor","StyledToolbar","MainLayout","children","loading","error","doAction","IdbAPI","products","fcs","length","setProducts","setFcs","console","log","ServerAPI","data","locations","info","getProductsAndFcs","CssBaseline","BACKEND_URL","uploadDB","file","formData","FormData","append","axios","headers","result","getAllInfo","db","openDB","upgrade","createObjectStore","keyPath","autoIncrement","doPutTransaction","storeName","array","tx","transaction","_array","el","store","put","concat","done","Promise","all","doClearTransaction","clear","getProducts","getAll","getFcs","_products","found","find","date","fc","Set","getStatistics","from","to","filter","moment","isAfter","isSame","isBefore","sort","a","b","HP","LP","reverse","AP","reduce","parseInt","LSD","SSD","ASD","LMD","SMD","AMD","LLD","SLD","ALD","categorys","CATEGORY","forEach","category","arr","push","label","count","sub_categorys","SUBCATEGORY","brands","BRAND","brand"],"sourceRoot":""}