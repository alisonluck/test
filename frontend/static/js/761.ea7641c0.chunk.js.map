{"version":3,"file":"static/js/761.ea7641c0.chunk.js","mappings":"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","sources":["components/inputs/FileInput.jsx","pages/UpdateDB.jsx"],"sourcesContent":["import React, { memo, useState,  useCallback, useMemo} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport clsx from 'clsx'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { styled } from \"@mui/material\";\r\nimport Paper from '@mui/material/Paper';\r\nimport grey from '@mui/material/colors/grey';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst StyledPaper = styled(Paper)(\r\n    ({theme}) => ({\r\n        height: 350,\r\n        width: 550,\r\n        borderWidth: 2,\r\n        borderRadius: 10,\r\n        borderStyle: 'dashed',\r\n        borderColor: theme.palette.secondary.main,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: grey[200],\r\n    })\r\n)\r\nconst StyledTypography = styled(Typography)(\r\n    ({theme}) => ({\r\n        color: theme.palette.text.secondary,\r\n        fontWeight: '500',\r\n        fontSize: theme.spacing(2.2),\r\n        fontStyle: 'italic'\r\n    })\r\n);\r\n\r\nconst FileInput = ({data, name, onChange, placeholder, disabled}) => {\r\n    const dispatch = useDispatch();\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        if(acceptedFiles.length > 0 ){\r\n            const file =  acceptedFiles[0]\r\n            onChange(file)\r\n        }\r\n    }, [onChange])\r\n    const {getRootProps, getInputProps} = useDropzone({onDrop});\r\n\r\n    const RootElement = useMemo(()=>{\r\n        if(!!data){\r\n            return (\r\n                <Box className={clsx('full-width')} sx={{paddingLeft:1, paddingRight: 1}} >\r\n                    <StyledTypography>\r\n                        {placeholder}\r\n                    </StyledTypography>\r\n                    <StyledTypography \r\n                        sx={{\r\n                            color: theme => theme.palette.secondary.main,\r\n                            paddingTop: theme => theme.spacing(1),\r\n                            fontWeight: 'bold'\r\n                        }}\r\n                        className={clsx('ellipsis')}\r\n                    >\r\n                        {name}\r\n                    </StyledTypography>\r\n                </Box>\r\n            )\r\n        }else{\r\n            return (\r\n                <StyledTypography>\r\n                   {placeholder}\r\n                </StyledTypography>\r\n            )\r\n        }\r\n    }, [data])\r\n\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            <Box>\r\n                <StyledPaper elevation={0} {...getRootProps()} >\r\n                    <input disabled={disabled} {...getInputProps()} />\r\n                    { RootElement }\r\n                </StyledPaper>\r\n            </Box>\r\n        </div>\r\n        \r\n    )\r\n}\r\nFileInput.defaultProps = {\r\n    data: '',\r\n    onChange: () => {},\r\n    placeholder: 'Drop New Image',\r\n    loading: false,\r\n    disabled: false\r\n}\r\nexport default memo(FileInput)","import React, { memo, useState, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport { setUploading } from \"../modules/help\";\r\nimport MainLayout from \"../layouts/MainLayout\";\r\nimport FileInput from \"../components/inputs/FileInput\";\r\n\r\nimport * as FileAPI from \"../services/api\";\r\nimport * as IdbAPI from \"../services/idb\";\r\n\r\nimport { setGlobalMessage, setFcs, setProducts } from \"../modules/help\";\r\nimport { getProductsAndFcs } from \"../utils/calulator\";\r\nconst UpdateDB = () => {\r\n    const [value, setValue] = useState({\r\n        file: null,\r\n        name: ''\r\n    })\r\n    const dispatch = useDispatch();\r\n    const onChangeFile = useCallback((file) => {\r\n        if(!!file) setValue(value => ({ ...value, file: file, name: file['name']}))\r\n    }, []);\r\n    const onUpload = useCallback(async () => {\r\n        dispatch(setUploading(true));\r\n        const {file} = value;\r\n        try{\r\n            if(!!file) {\r\n                const {data} = await FileAPI.uploadDB(file);\r\n                let {error, products, locations} = data;\r\n                dispatch(setUploading(false));\r\n                if(!!error) dispatch(setGlobalMessage({ status: false,  message: error }));\r\n                else {\r\n                    const info = getProductsAndFcs({products, locations});\r\n                    await IdbAPI.doClearTransaction('products');\r\n                    await IdbAPI.doClearTransaction('fcs');\r\n                    await IdbAPI.doPutTransaction('products', info['products']);\r\n                    await IdbAPI.doPutTransaction('fcs', info['fcs']);\r\n                    dispatch(setProducts(info['products']));\r\n                    dispatch(setFcs(info['fcs']));\r\n                    setValue(value => ({ ...value, name: '', file: null }))\r\n                    dispatch(setGlobalMessage({ status: true, message: 'Database has been updated!' }));\r\n                }\r\n            }\r\n        }catch(error) {\r\n            dispatch(setUploading(false));\r\n            dispatch(setGlobalMessage({ status: false, message: error.message }))\r\n        }\r\n    }, [value])\r\n    return (\r\n        <>\r\n            <MainLayout>\r\n                <Box className={clsx('flex', 'justify-center', 'flex-grow')}>\r\n                    <Box>\r\n                        <FileInput \r\n                            name={value['name']}\r\n                            data={value['file']}\r\n                            placeholder=\"Drop New Database\"\r\n                            onChange={onChangeFile}\r\n                        />\r\n                        <Button \r\n                            variant=\"contained\" \r\n                            disabled={!value['file']} \r\n                            sx={{width: '100%', mt: 3}}\r\n                            onClick={onUpload}\r\n                        >\r\n                            Update \r\n                        </Button>\r\n                    </Box>\r\n                </Box>\r\n            </MainLayout>\r\n        </>\r\n    )\r\n}\r\nexport default memo(UpdateDB);"],"names":["StyledPaper","styled","Paper","height","width","borderWidth","borderRadius","borderStyle","borderColor","theme","palette","secondary","main","display","alignItems","justifyContent","backgroundColor","grey","StyledTypography","Typography","color","text","fontWeight","fontSize","spacing","fontStyle","FileInput","data","name","onChange","placeholder","disabled","onDrop","useDispatch","useCallback","acceptedFiles","length","file","useDropzone","getRootProps","getInputProps","RootElement","useMemo","Box","className","clsx","sx","paddingLeft","paddingRight","paddingTop","style","textAlign","elevation","defaultProps","loading","memo","UpdateDB","useState","value","setValue","dispatch","onChangeFile","onUpload","setUploading","FileAPI","error","products","locations","setGlobalMessage","status","message","info","getProductsAndFcs","IdbAPI","setProducts","setFcs","MainLayout","Button","variant","mt","onClick"],"sourceRoot":""}