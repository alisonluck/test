{"version":3,"file":"static/js/795.bd06406f.chunk.js","mappings":"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","sources":["components/Menu.jsx","components/AppBar.jsx","components/Drawer.jsx","components/Backdrop.jsx","components/SignalTrigger.jsx","layouts/MainLayout.jsx","services/api.js","services/idb.js","utils/calulator.js"],"sourcesContent":["import React, {memo} from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport Grow from '@mui/material/Grow';\r\nimport Popper from '@mui/material/Popper';\r\nimport {grey} from '@mui/material/colors';\r\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\r\nimport Paper from '@mui/material/Paper';\r\nimport MenuList from '@mui/material/MenuList';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\r\nimport ChatOutlinedIcon from '@mui/icons-material/ChatOutlined';\r\nimport ReadMoreOutlinedIcon from '@mui/icons-material/ReadMoreOutlined';\r\nconst MyIcon = memo(({name}) => {\r\n    if(name === 'Logout') return <LogoutIcon sx={{fontSize: 22, mr: 1}} />;\r\n    else if(name === 'Setting') return <SettingsOutlinedIcon sx={{fontSize: 22, mr: 1}} />;\r\n    else if(name === 'Chat With Driver') return <ChatOutlinedIcon sx={{fontSize: 22, mr: 1}} />;\r\n    else if(name === 'Order Details') return <ReadMoreOutlinedIcon sx={{fontSize: 22, mr: 1}} />;\r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n})\r\nconst MyMenu = ({ open, anchorEl, options, onClick, onClose }) => {\r\n    return (\r\n        <>\r\n            <Popper \r\n                open={open} \r\n                anchorEl={ anchorEl.current} \r\n                role={undefined} \r\n                transition \r\n                disablePortal\r\n                placement=\"bottom-end\"\r\n                style={{zIndex: 1300}}\r\n            >\r\n                {({ TransitionProps, placement }) => (\r\n                    <Grow {...TransitionProps} style={{ transformOrigin: 'center top' }} >\r\n                        <Paper elevation={4}>\r\n                            <ClickAwayListener onClickAway={onClose}>\r\n                                <MenuList \r\n                                    autoFocusItem={Boolean(anchorEl)} \r\n                                    sx={{ maxHeight: 400, }}\r\n                                >\r\n                                    { options.map((option, index) => (\r\n                                        <MenuItem \r\n                                            key={`option_${index}`} \r\n                                            onClick={()=>onClick(option)}\r\n                                            sx={{ \r\n                                                paddingLeft: theme=>theme.spacing(3), \r\n                                                paddingRight: theme=>theme.spacing(3) \r\n                                            }}\r\n                                        >  \r\n                                            <MyIcon name={option} />\r\n                                            <Typography\r\n                                                sx={{\r\n                                                    paddingTop: theme=>theme.spacing(0.2),\r\n                                                    paddingBottom: theme=>theme.spacing(0.2),\r\n                                                }}\r\n                                            >\r\n                                                {option} \r\n                                            </Typography>\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </MenuList>\r\n                            </ClickAwayListener>\r\n                        </Paper>\r\n                    </Grow>\r\n                )}\r\n            </Popper>\r\n        </>\r\n    )\r\n}\r\nMyMenu.defaultProps = {\r\n    open: false,\r\n    anchorEl: null,\r\n    options: [],\r\n    onClick: () => {},\r\n    onClose: () => {}\r\n}\r\nexport default memo(MyMenu);","import React, { memo, useRef, useCallback, useState, useMemo } from \"react\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { styled } from '@mui/material/styles';\r\nimport { grey } from '@mui/material/colors';\r\nimport MUIAppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport MuiToolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport TransgenderIcon from '@mui/icons-material/Transgender';\r\nimport Menu from \"./Menu\";\r\n\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n      right: -3,\r\n      top: 13,\r\n      border: `2px solid ${theme.palette.background.paper}`,\r\n      padding: '0 4px',\r\n    },\r\n}));\r\n\r\nconst Toolbar = styled(MuiToolbar)(\r\n    ({ theme }) => ({\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    }),\r\n);\r\nconst Image = styled('img') (\r\n    ({theme}) => ({\r\n        width: 35,\r\n        height: 35,\r\n        objectFit: 'contain',\r\n        marginRight: theme.spacing(4)\r\n    })\r\n)\r\nconst AppBar = () => {\r\n    \r\n    const [value, setValue] = useState({\r\n        menu: false,\r\n    });\r\n    const navigate = useNavigate();\r\n    const profileRef = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const onClickMenu = useCallback((prop) => {\r\n        if(prop === 'Logout') {\r\n           \r\n        }\r\n        setValue(value => ({ ...value, menu: false}))\r\n    }, []);\r\n    const onOpenMenu = useCallback(() => {\r\n        setValue(value => ({ ...value, menu: true}))\r\n    }, [])\r\n    const onCloseMenu = useCallback(() => {\r\n        setValue(value => ({ ...value, menu: false}))\r\n    }, []);\r\n    const onHome = useCallback(() => {\r\n        navigate('/')\r\n    }, [])\r\n    return (\r\n        <>\r\n            <MUIAppBar position=\"fixed\" sx={{bgcolor: grey[100], zIndex: theme => theme.zIndex.drawer + 1}} >\r\n                <Toolbar spacing={2}>\r\n                    <Box className={clsx('flex-grow')}>\r\n                        <Typography variant=\"h6\" sx={{color: grey[700]}}>\r\n                            My Statistics Viewer\r\n                        </Typography>\r\n                    </Box>\r\n                    <IconButton >\r\n                        <TransgenderIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </MUIAppBar>\r\n            <Menu \r\n                options={[\r\n                    \"Logout\", \"Setting\"\r\n                ]}\r\n                open={value['menu']}\r\n                anchorEl={profileRef}\r\n                onClose={onCloseMenu}\r\n                onClick={onClickMenu}\r\n            />\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default memo(AppBar)","import React, {memo, useCallback, useMemo} from 'react';\r\nimport clsx from 'clsx';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport {grey} from '@mui/material/colors';\r\n\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport List from '@mui/material/List';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport StorageOutlinedIcon from '@mui/icons-material/StorageOutlined';\r\nimport AnalyticsOutlinedIcon from '@mui/icons-material/AnalyticsOutlined';\r\nimport StackedBarChartIcon from '@mui/icons-material/StackedBarChart';\r\nconst Drawer = styled(MuiDrawer)(\r\n    ({ theme }) => ({\r\n      width: `calc(${theme.spacing(30)} + 1px)`,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n      boxSizing: 'border-box',\r\n      '& .MuiDrawer-paper': {\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: 'hidden',\r\n        width: `calc(${theme.spacing(30)} + 1px)`,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        height: '100vh'\r\n      }\r\n    }),\r\n  );\r\nconst MyDrawer = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const onClick = useCallback((path) => () => {\r\n        navigate(path)\r\n    }, []);\r\n    const activeTab = useMemo(() => {\r\n        if(location.pathname === '/') return 'Statistics';\r\n        else if(location.pathname === '/charts') return 'Charts';\r\n        else if(location.pathname === '/update') return 'Update DB'\r\n        return ''\r\n    }, [location])\r\n    return (\r\n        <>\r\n            <Drawer variant=\"permanent\">\r\n              <Box \r\n                className={clsx('full-width', 'text-center', 'cursor-pointer')} \r\n                sx={{ pt: 11 }} \r\n              >\r\n                <List >\r\n                    <ListItem disablePadding >\r\n                        <ListItemButton onClick={onClick('/')} selected={activeTab === 'Statistics'}>\r\n                            <ListItemIcon>\r\n                                <AnalyticsOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Statistics\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                    <ListItem disablePadding selected={activeTab === 'Update DB'}>\r\n                        <ListItemButton onClick={onClick('/update')}>\r\n                            <ListItemIcon>\r\n                                <StorageOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Update DB\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                    <ListItem disablePadding selected={activeTab === 'Charts'} >\r\n                        <ListItemButton onClick={onClick('/charts')}>\r\n                            <ListItemIcon>\r\n                                <StackedBarChartIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Charts\" />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                </List>\r\n              </Box>\r\n            \r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\nexport default memo(MyDrawer);","import React, {memo} from 'react';\r\nimport { useSelector, shallowEqual } from \"react-redux\";\r\nimport clsx from 'clsx';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nconst MyBackdrop = () => {\r\n    const {uploading} = useSelector(state => ({\r\n        uploading: state.Help.uploading\r\n    }), shallowEqual)\r\n    return (\r\n        <>\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 2 }}\r\n                open={!!uploading}\r\n            >\r\n                <Box className={clsx('flex-column', 'align-center')} >\r\n                    <CircularProgress color=\"inherit\" />\r\n                    <Typography sx={{mt: 2}}> {uploading} </Typography>\r\n                </Box>\r\n            </Backdrop>\r\n        </>\r\n    )\r\n}\r\nMyBackdrop.defaultProps = {\r\n    title: 'Uploading...'\r\n}\r\nexport default memo(MyBackdrop)","import React, { memo, useEffect, useMemo, forwardRef, useCallback } from 'react';\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport Button from '@mui/material/Button';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { setGlobalMessage, clearHelp } from \"../modules/help\";\r\n\r\nconst Alert = forwardRef((props, ref) =>{\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  })\r\nconst MySnackBar = memo(({message, status,  onClose}) => {\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ \r\n                    vertical: 'bottom', \r\n                    horizontal: 'center' \r\n                }}\r\n                open={true}\r\n                onClose={onClose}\r\n                autoHideDuration={3000} \r\n            >\r\n                <Alert onClose={onClose} severity={status} >\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n})\r\nconst SignalTrigger = () => {\r\n    const {globalMessage} = useSelector(state => ({\r\n        globalMessage: state.Help.globalMessage,\r\n    }), shallowEqual);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(clearHelp());\r\n    }, []);\r\n    const onCloseSnackBar = useCallback(() => {\r\n        dispatch(setGlobalMessage(null))\r\n    }, []);\r\n    const renderSnackBar = useMemo(() => {\r\n        if(!globalMessage) return <></>\r\n        const {message, status} = globalMessage;\r\n        return (\r\n            <MySnackBar \r\n                message={message} \r\n                status= {status? \"success\": \"error\" } \r\n                onClose = {onCloseSnackBar} \r\n            />\r\n        )\r\n    }, [globalMessage]);\r\n   \r\n    return (\r\n        <>\r\n            {renderSnackBar}\r\n        </>\r\n    )\r\n}\r\nexport default memo(SignalTrigger)","import React, { memo, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport {styled} from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport {grey} from '@mui/material/colors';\r\nimport AppBar from \"../components/AppBar\";\r\nimport MyDrawer from \"../components/Drawer\";\r\nimport Backdrop from \"../components/Backdrop\";\r\nimport SignalTrigger from \"../components/SignalTrigger\";\r\nimport * as IdbAPI from \"../services/idb\";\r\nimport * as ServerAPI from \"../services/api\";\r\n\r\nimport { setCurrentFc, setFcs, setCurrentResult } from '../modules/help';\r\nimport { getFcs } from \"../utils/calulator\";\r\nconst StyledContent = styled('main')(\r\n    ({theme}) => ({\r\n        width: '100%',\r\n        backgroundColor: grey[100],\r\n        height: '100vh',\r\n        backgroundColor: grey[100],\r\n        paddingLeft: theme.spacing(34),\r\n        paddingRight: theme.spacing(4),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingTop: theme.spacing(4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    })\r\n)\r\nconst StyledToolbar = styled('div')(\r\n    ({theme}) => ({\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      paddingTop: theme.mixins.toolbar.height\r\n    })\r\n)\r\nconst getStatistics = async (fc) => {\r\n    try {\r\n        const statisticsData = await ServerAPI.getResult(fc, null, null);\r\n        if(statisticsData['data']['status']) {\r\n            const result = statisticsData['data']['result']\r\n            return result;\r\n        }\r\n    }catch(error) {\r\n        return null;\r\n    }\r\n}\r\nconst MainLayout = ({children}) => {\r\n    const {fcs, currentFc, currentResult} = useSelector(state => ({\r\n        fcs: state.Help.fcs,\r\n        currentFc: state.Help.currentFc,\r\n        currentResult: state.Help.currentResult\r\n    }), shallowEqual);\r\n    const [value, setValue] = useState({\r\n        loading: true,\r\n        error: null\r\n    })\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        const doAction = async () => {\r\n            await IdbAPI.doClearTransaction('products');\r\n            await IdbAPI.doClearTransaction('fcs');\r\n            const locationData = await ServerAPI.getLocations();\r\n            try {\r\n                let { status,  locations, error } = locationData['data'];\r\n                if(status) {\r\n                    let fcs = getFcs(locations);\r\n                    dispatch(setFcs(fcs));\r\n                    if(!!fcs || !!fcs.length) {\r\n                        let currentFc = fcs[0];\r\n                        dispatch(setCurrentFc(currentFc));\r\n                        const result = await getStatistics(currentFc);\r\n                        if(!!result) dispatch(setCurrentResult(result))\r\n                    }\r\n                    setValue(value => ({ ...value, loading: false }));\r\n                }else {\r\n                    setValue(value => ({ ...value, loading: false, error: error }));\r\n                }\r\n            }catch (error) {\r\n                setValue(value => ({ ...value, loading: false, error: error.message }));\r\n            }\r\n        }\r\n        if(!currentResult) doAction();\r\n        else setValue(value => ({ ...value, loading: false }));\r\n    }, [currentResult])\r\n    \r\n    const {loading, error} = value;\r\n    return (\r\n        <>\r\n            {loading? (\r\n                <Box className={clsx('full-screen', 'flex', 'justify-center')}>\r\n                    <CircularProgress />\r\n                </Box>\r\n            ): (\r\n                <>\r\n                    {!!error ? (\r\n                        <Box className={clsx('full-screen', 'flex', 'justify-center')}>\r\n                            <Typography variant=\"h6\">\r\n                                {error}\r\n                            </Typography>\r\n                        </Box>\r\n                    ): (\r\n                        <>\r\n                            <CssBaseline />\r\n                            <AppBar />\r\n                            <MyDrawer />\r\n                            <Backdrop />\r\n                            <SignalTrigger />\r\n                            <StyledContent>\r\n                                <StyledToolbar />\r\n                                {children}\r\n                            </StyledContent>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default memo(MainLayout);    ","import axios from 'axios'\r\n//let BACKEND_URL = 'http://159.223.203.170:3001';\r\nlet BACKEND_URL = 'http://localhost:3001'\r\n\r\nexport const uploadDB = async (file) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    const result = await axios.post(`${BACKEND_URL}/file/upload`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n    })\r\n    return result;\r\n}\r\nexport const getAllInfo = async () => {\r\n  const result = await axios.post(`${BACKEND_URL}/info/getAllInfo`)\r\n  return result;\r\n}\r\nexport const getLocations = async () => {\r\n  const result = await axios.post(`${BACKEND_URL}/info/getLocations`)\r\n  return result;\r\n}\r\nexport const getResult = async (fc, from, to) => {\r\n  const result = await axios.post(`${BACKEND_URL}/info/getResult`, {fc, from, to})\r\n  return result;\r\n}","import { openDB, deleteDB } from 'idb';\r\nconst db = openDB('david_statistics', 1, {\r\n    upgrade(db) {\r\n        db.createObjectStore('products', {\r\n            keyPath: 'id',\r\n            autoIncrement: true,\r\n        });\r\n        db.createObjectStore('fcs', {\r\n            keyPath: 'id',\r\n            autoIncrement: true,\r\n        });\r\n    }\r\n})\r\nexport const doPutTransaction = async (storeName, array) => {\r\n    const tx = (await db).transaction(storeName, 'readwrite')\r\n    let _array = array.map((el) => {\r\n      return tx.store.put(el)\r\n    }).concat(tx.done);\r\n    return Promise.all(_array);\r\n}\r\nexport const doClearTransaction = async (storeName) => {\r\n    return (await db).clear(storeName);\r\n}\r\nexport const getProducts = async () => {\r\n    const array = await (await db).getAll('products');\r\n    return array;\r\n}\r\nexport const getFcs = async () => {\r\n    const array = await (await db).getAll('fcs');\r\n    return array;\r\n}","import moment from 'moment';\r\n\r\nexport const getFcs = (locations) => {\r\n    let fcs = [...new Set(locations.map(el => el['Fc']))];\r\n    return fcs;\r\n}\r\nexport const getStatistics = (products, fc, from , to) => {\r\n    let _products = [...products];\r\n    if(fc !== 'All') _products = _products.filter(el => el['fc'] === fc);\r\n    if(!!from) {\r\n        _products = _products.filter(el => !!el['date']).filter(el => {\r\n            return moment(el['date']).isAfter(from) || moment(el['date']).isSame(from) ; \r\n        })\r\n    }\r\n    if(!!to) {\r\n        _products = _products.filter(el => !!el['date']).filter(el => {\r\n            return moment(el['date']).isBefore(to) || moment(el['date']).isSame(to) ; \r\n        })\r\n    }\r\n    // HP, LP, AP, LSD, SSD, ASD, LMD, SMD, AMD, LLD , SLD, ALD, CATEGORY, SUBCATEGORY, BRAND \r\n    \r\n    let array = [..._products];\r\n    array = array.filter(el => !!el['Price'])\r\n    array.sort((a, b) => a['Price'] < b['Price']? 1: -1);\r\n    let HP = array.filter((el, index) => !!el && index < 5).map(el => el['Price']);\r\n    array = array.reverse();\r\n    let LP = array.filter((el, index) => !!el && index < 5).map(el => el['Price']);\r\n    let AP = array.map(el => el['Price']).reduce((a, b) => a + b, 0) / array.length;\r\n    AP = parseInt(AP * 10000) / 10000;\r\n\r\n    array = [..._products];\r\n    array = array.filter(el => !!el['Shortest'])\r\n    array.sort((a, b) => a['Shortest'] < b['Shortest']? 1: -1);\r\n    let LSD = array.filter((el, index) => !!el && index < 5).map(el => el['Shortest']);\r\n    array = array.reverse();\r\n    let SSD = array.filter((el, index) => !!el && index < 5).map(el => el['Shortest']);\r\n    let ASD = array.map(el => el['Shortest']).reduce((a, b) => a + b, 0) / array.length;\r\n    ASD = parseInt(ASD * 10000) / 10000;\r\n    \r\n    array = [..._products];\r\n    array = array.filter(el => !!el['Median'])\r\n    array.sort((a, b) => a['Median'] < b['Median']? 1: -1);\r\n    let LMD = array.filter((el, index) => !!el && index < 5).map(el => el['Median']);\r\n    array = array.reverse();\r\n    let SMD = array.filter((el, index) => !!el && index < 5).map(el => el['Median']);\r\n    let AMD = array.map(el => el['Median']).reduce((a, b) => a + b, 0) / array.length;\r\n    AMD = parseInt(AMD * 10000) / 10000;\r\n   \r\n    array = [..._products];\r\n    array = array.filter(el => !!el['Longest'])\r\n    array.sort((a, b) => a['Longest'] < b['Longest']? 1: -1);\r\n    let LLD = array.filter((el, index) => !!el && index < 5).map(el => el['Longest']);\r\n    array = array.reverse();\r\n    let SLD = array.filter((el, index) => !!el && index < 5).map(el => el['Longest']);\r\n    let ALD = array.map(el => el['Longest']).reduce((a, b) => a + b, 0) / array.length;\r\n    ALD = parseInt(ALD * 10000) / 10000;\r\n\r\n    array = [..._products];\r\n    array = array.filter(el => !!el['C1'])\r\n    let categorys = [...new Set(array.map(el => el['C1']))]\r\n    let CATEGORY = [];\r\n    categorys.forEach(category => {\r\n        let arr = array.filter(el => el['C1'] === category);\r\n        CATEGORY.push({  label: category, count: arr.length })\r\n    })\r\n    CATEGORY.sort((a, b) => a['count'] < b['count']? 1: -1);\r\n\r\n    array = [..._products];\r\n    array = array.filter(el => !!el['C2'])\r\n    let sub_categorys = [...new Set(array.map(el => el['C2']))]\r\n    let SUBCATEGORY = [];\r\n    sub_categorys.forEach(label => {\r\n        let arr = array.filter(el => el['C2'] === label);\r\n        SUBCATEGORY.push({  label: label, count: arr.length })\r\n    })\r\n    SUBCATEGORY.sort((a, b) => a['count'] < b['count']? 1: -1);\r\n\r\n    array = [..._products];\r\n    array = array.filter(el => !!el['Brand'])\r\n    let brands = [...new Set(array.map(el => el['Brand']))]\r\n    let BRAND = [];\r\n    brands.forEach(brand => {\r\n        let arr = array.filter(el => el['Brand'] === brand);\r\n        BRAND.push({  label: brand, count: arr.length })\r\n    })\r\n    BRAND.sort((a, b) => a['count'] < b['count']? 1: -1);\r\n    return [\r\n        { label: 'Highest Prices', array: HP },\r\n        { label: 'Lowest Prices', array: LP },\r\n        { label: 'Average Prices', array: [AP] },\r\n        { label: 'Largest Shortest Dimensions', array: LSD },\r\n        { label: 'Smallest Shortest Dimensions', array: SSD },\r\n        { label: 'Average Shortest Dimension', array: [ASD] },\r\n        { label: 'Largest Median Dimensions', array: LMD },\r\n        { label: 'Smallest Median Dimensions', array: SMD },\r\n        { label: 'Average Median Dimension', array: [AMD] },\r\n        { label: 'Largest Longest Dimensions', array: LLD },\r\n        { label: 'Smallest Longest Dimensions', array: SLD },\r\n        { label: 'Average Longest Dimension', array: [ALD] },\r\n        { label: 'Category', array: CATEGORY.map(el => el['label']) },\r\n        { label: 'Category Count', array: CATEGORY.map(el => el['count']) },\r\n        { label: 'Subcategory', array: SUBCATEGORY.map(el => el['label']) },\r\n        { label: 'Subcategory Count', array: SUBCATEGORY.map(el => el['count']) },\r\n        { label: 'Brand', array: BRAND.map(el => el['label']) },\r\n        { label: 'Brand Count', array: BRAND.map(el => el['count']) },\r\n    ]\r\n}"],"names":["MyIcon","memo","name","Logout","sx","fontSize","mr","SettingsOutlined","ChatOutlined","ReadMoreOutlined","MyMenu","open","anchorEl","options","onClick","onClose","Popper","current","role","undefined","transition","disablePortal","placement","style","zIndex","TransitionProps","Grow","transformOrigin","Paper","elevation","ClickAwayListener","onClickAway","MenuList","autoFocusItem","Boolean","maxHeight","map","option","index","MenuItem","paddingLeft","theme","spacing","paddingRight","Typography","paddingTop","paddingBottom","defaultProps","Toolbar","styled","Badge","right","top","border","palette","background","paper","padding","MuiToolbar","display","alignItems","justifyContent","mixins","toolbar","AppBar","width","height","objectFit","marginRight","useState","menu","value","setValue","navigate","useNavigate","profileRef","useRef","onClickMenu","useDispatch","useCallback","prop","onCloseMenu","position","bgcolor","grey","drawer","Box","className","clsx","variant","color","IconButton","Transgender","Menu","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","transitions","create","easing","sharp","duration","leavingScreen","overflowX","flexDirection","MyDrawer","location","useLocation","path","activeTab","useMemo","pathname","pt","List","ListItem","disablePadding","ListItemButton","selected","ListItemIcon","AnalyticsOutlined","ListItemText","primary","StorageOutlined","StackedBarChart","MyBackdrop","uploading","useSelector","state","Help","shallowEqual","Backdrop","CircularProgress","mt","title","Alert","forwardRef","props","ref","MySnackBar","message","status","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","SignalTrigger","globalMessage","dispatch","useEffect","clearHelp","onCloseSnackBar","setGlobalMessage","renderSnackBar","StyledContent","backgroundColor","StyledToolbar","getStatistics","fc","ServerAPI","statisticsData","result","MainLayout","children","fcs","currentFc","currentResult","loading","error","doAction","IdbAPI","locationData","locations","getFcs","setFcs","length","setCurrentFc","setCurrentResult","CssBaseline","BACKEND_URL","uploadDB","file","formData","FormData","append","axios","headers","getLocations","getResult","from","to","db","openDB","upgrade","createObjectStore","keyPath","autoIncrement","doClearTransaction","storeName","clear","Set","el"],"sourceRoot":""}